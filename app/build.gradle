//apply plugin: 'com.android.application'
plugins {
    id 'com.android.application'
}

android {
    namespace = 'com.micronet.dsc.vbs'
    buildFeatures{
        buildConfig = true
    }
    signingConfigs {
        tab8keys
        obc5keys
    }
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.micronet.dsc.vbs"
        versionCode 402
        versionName "4.0.2"
	    setProperty("archivesBaseName", "MicronetVBS-v" + versionName )
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
	        versionNameSuffix "-debug"
            signingConfig null // trick to eliminate default signing config for debug so it can be specified in flavors
        }
    }

    flavorDimensions "device"
    productFlavors {
        tab8 {
            dimension "device"
            applicationIdSuffix ""
            versionNameSuffix "-tab8"
            buildConfigField "String", "BUILD_DEVICE", '"tab8"'
            buildConfigField "String", "ATS_ID_SUFFIX", '".tab8"'  // for talking to ATS
            minSdkVersion 28
            targetSdkVersion 28
//            signingConfig signingConfigs.tab8keys
        }
        obc5 {
            dimension "device"
            //applicationIdSuffix ".obc5"
            applicationIdSuffix "" // leave this blank because ATS uses the application name to start VBS
            versionNameSuffix "-obc5"
            buildConfigField "String", "BUILD_DEVICE", '"obc5"'
            buildConfigField "String", "ATS_ID_SUFFIX", '".obc5"' // for talking to ATS
            minSdkVersion 28
            targetSdkVersion 28
//            signingConfig signingConfigs.obc5keys
            dependencies {
                implementation fileTree(dir: 'obc5/jniLibs', include: ['.so'])
            }
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    tab8Implementation files('libs/vehiclebus_api.jar')
    obc5Implementation files('libs/obc5_vehiclebus_api.jar')

    implementation 'com.google.code.gson:gson:2.10.1'

    androidTestImplementation 'androidx.test:core:1.5.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.appcompat:appcompat:1.6.1'
}

//def tab8_props = new Properties()
//tab8_props.load(new FileInputStream(rootProject.file("tab8keys.properties")))
//android.signingConfigs.tab8keys.storeFile rootProject.file(tab8_props.keyStore)
//android.signingConfigs.tab8keys.storePassword tab8_props.keyStorePassword
//android.signingConfigs.tab8keys.keyAlias tab8_props.keyAlias
//android.signingConfigs.tab8keys.keyPassword tab8_props.keyAliasPassword
//
//def obc5_props = new Properties()
//obc5_props.load(new FileInputStream(rootProject.file("obc5keys.properties")))
//android.signingConfigs.obc5keys.storeFile rootProject.file(obc5_props.keyStore)
//android.signingConfigs.obc5keys.storePassword obc5_props.keyStorePassword
//android.signingConfigs.obc5keys.keyAlias obc5_props.keyAlias
//android.signingConfigs.obc5keys.keyPassword obc5_props.keyAliasPassword